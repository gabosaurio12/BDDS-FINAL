/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package veterinaria.view;

import java.sql.Date;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import veterinaria.businesslogic.dao.CitaDAO;
import veterinaria.businesslogic.dto.ConsultarCitaDTO;
import veterinaria.businesslogic.dto.ProductoDTO;
import veterinaria.businesslogic.dto.VeterinarioDTO;

/**
 *
 * @author gabosaurio
 */
public class GUIConsultarCitas extends javax.swing.JFrame {

    private static final Logger logger = LogManager.getLogger();
    /**
     * Creates new form GUIConsultarCitas
     */
    public GUIConsultarCitas() {
        initComponents();
        cargarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaConsultas = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        textBusquedaVet = new javax.swing.JTextField();
        botonCerrar = new javax.swing.JButton();
        botonBuscar = new javax.swing.JButton();
        spinnerDia = new javax.swing.JSpinner();
        spinnerMes = new javax.swing.JSpinner();
        spinnerAno = new javax.swing.JSpinner();
        botonBuscarFecha = new javax.swing.JButton();
        botonBuscarMes = new javax.swing.JButton();
        botonRecargar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tablaConsultas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Veterinario", "Mascota", "Dueño", "Motivo", "Tratamiento", "Fecha"
            }
        ));
        jScrollPane1.setViewportView(tablaConsultas);

        jLabel1.setText("Citas del día");

        textBusquedaVet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textBusquedaVetActionPerformed(evt);
            }
        });

        botonCerrar.setText("Cerrar");
        botonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCerrarActionPerformed(evt);
            }
        });

        botonBuscar.setText("Buscar");
        botonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarActionPerformed(evt);
            }
        });

        spinnerDia.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));

        spinnerMes.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));

        spinnerAno.setModel(new javax.swing.SpinnerNumberModel(2025, 2000, 3000, 1));

        botonBuscarFecha.setText("Fecha");
        botonBuscarFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarFechaActionPerformed(evt);
            }
        });

        botonBuscarMes.setText("Mes");
        botonBuscarMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarMesActionPerformed(evt);
            }
        });

        botonRecargar.setText("Recargar");
        botonRecargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRecargarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botonCerrar)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(textBusquedaVet, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(botonBuscar)
                            .addGap(18, 18, 18)
                            .addComponent(spinnerDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(spinnerMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(spinnerAno)
                                .addComponent(botonRecargar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(botonBuscarFecha))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(31, 31, 31)
                                    .addComponent(botonBuscarMes))))))
                .addGap(34, 34, 34))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonBuscarMes)
                    .addComponent(botonRecargar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textBusquedaVet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonBuscar)
                    .addComponent(spinnerDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinnerMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinnerAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonBuscarFecha))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(botonCerrar)
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCerrarActionPerformed
        new GUIMenuPrincipal().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_botonCerrarActionPerformed

    private void cargarTabla() {
        List<ConsultarCitaDTO> consultas = new CitaDAO().obtenerCitasFiltradas();
        String[] columnas = { "Veterinario", "Mascota", "Dueño", "Motivo", "Tratamiento", "Fecha" };
        DefaultTableModel modelo = new DefaultTableModel(columnas, 0);

        try {
            for (ConsultarCitaDTO i : consultas) {
                Object[] fila = new Object[6];
                fila[0] = i.getNombreVeterinario();
                fila[1] = i.getNombreMascota();
                fila[2] = i.getNombreDueno();
                fila[3] = i.getMotivoConsulta();
                fila[4] = i.getTratamiento();
                fila[5] = i.getFecha();
                modelo.addRow(fila);
            }
        } catch (Exception e) {
            logger.error("Error al cargar tabla", e);
        }

        tablaConsultas.setModel(modelo);
}
    
    private void textBusquedaVetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textBusquedaVetActionPerformed
    }//GEN-LAST:event_textBusquedaVetActionPerformed

    private void botonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarActionPerformed
        String nombreVet = textBusquedaVet.getText().trim();
        List<ConsultarCitaDTO> consultas = new CitaDAO().obtenerCitasFiltradas();
        List<ConsultarCitaDTO> consultasBuscadas = new ArrayList<>();
        
        for (ConsultarCitaDTO i : consultas) {
            if (i.getNombreVeterinario().toLowerCase().contains(nombreVet.toLowerCase())) {
                consultasBuscadas.add(i);
            }
        }
        String[] columnas = { "Veterinario", "Mascota", "Dueño", "Motivo", "Tratamiento", "Fecha" };
        DefaultTableModel modelo = new DefaultTableModel(columnas, 0);

        try {
            for (ConsultarCitaDTO i : consultasBuscadas) {
                Object[] fila = new Object[6];
                fila[0] = i.getNombreVeterinario();
                fila[1] = i.getNombreMascota();
                fila[2] = i.getNombreDueno();
                fila[3] = i.getMotivoConsulta();
                fila[4] = i.getTratamiento();
                fila[5] = i.getFecha();
                modelo.addRow(fila);
            }
        } catch (Exception e) {
            logger.error("Error al cargar tabla", e);
        }
        
        tablaConsultas.setModel(modelo);
        
    }//GEN-LAST:event_botonBuscarActionPerformed

    private void botonBuscarFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarFechaActionPerformed
        int diaInt = (Integer) spinnerDia.getValue();
        int mesInt = (Integer) spinnerMes.getValue();
        int anoInt = (Integer) spinnerAno.getValue();
        
        String dia = diaInt < 10 ? "0" + diaInt : String.valueOf(diaInt);
        String mes = mesInt < 10 ? "0" + mesInt : String.valueOf(mesInt);
        String ano = String.valueOf(anoInt);

        String fecha = ano + "-" + mes + "-" + dia;
        
        List<ConsultarCitaDTO> consultas = new CitaDAO().obtenerCitasFiltradas();
        List<ConsultarCitaDTO> consultasBuscadas = new ArrayList<>();
        
        for (ConsultarCitaDTO i : consultas) {
            if (i.getFecha().toString().toLowerCase().contains(fecha)) {
                consultasBuscadas.add(i);
            }
        }
        String[] columnas = { "Veterinario", "Mascota", "Dueño", "Motivo", "Tratamiento", "Fecha" };
        DefaultTableModel modelo = new DefaultTableModel(columnas, 0);

        try {
            for (ConsultarCitaDTO i : consultasBuscadas) {
                Object[] fila = new Object[6];
                fila[0] = i.getNombreVeterinario();
                fila[1] = i.getNombreMascota();
                fila[2] = i.getNombreDueno();
                fila[3] = i.getMotivoConsulta();
                fila[4] = i.getTratamiento();
                fila[5] = i.getFecha();
                modelo.addRow(fila);
            }
        } catch (Exception e) {
            logger.error("Error al cargar tabla", e);
        }
        
        tablaConsultas.setModel(modelo);
    }//GEN-LAST:event_botonBuscarFechaActionPerformed

    private void botonBuscarMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarMesActionPerformed
<<<<<<< HEAD
        int mesInt = (Integer) spinnerMes.getValue();
                
        List<ConsultarCitaDTO> consultas = new CitaDAO().obtenerCitasFiltradas();
        List<ConsultarCitaDTO> consultasBuscadas = new ArrayList<>();
        
        for (ConsultarCitaDTO i : consultas) {
            if (i.getFecha().getMonth() + 1 == mesInt) {
                consultasBuscadas.add(i);
            }
        }
        String[] columnas = { "Veterinario", "Mascota", "Dueño", "Motivo", "Tratamiento", "Fecha" };
        DefaultTableModel modelo = new DefaultTableModel(columnas, 0);

        try {
            for (ConsultarCitaDTO i : consultasBuscadas) {
                Object[] fila = new Object[6];
                fila[0] = i.getNombreVeterinario();
                fila[1] = i.getNombreMascota();
                fila[2] = i.getNombreDueno();
                fila[3] = i.getMotivoConsulta();
                fila[4] = i.getTratamiento();
                fila[5] = i.getFecha();
                modelo.addRow(fila);
            }
        } catch (Exception e) {
            logger.error("Error al cargar tabla", e);
        }
        
        tablaConsultas.setModel(modelo);
    }//GEN-LAST:event_botonBuscarMesActionPerformed

    private void botonRecargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRecargarActionPerformed
        cargarTabla();
    }//GEN-LAST:event_botonRecargarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIConsultarCitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIConsultarCitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIConsultarCitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIConsultarCitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIConsultarCitas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonBuscar;
    private javax.swing.JButton botonBuscarFecha;
    private javax.swing.JButton botonBuscarMes;
    private javax.swing.JButton botonCerrar;
    private javax.swing.JButton botonRecargar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner spinnerAno;
    private javax.swing.JSpinner spinnerDia;
    private javax.swing.JSpinner spinnerMes;
    private javax.swing.JTable tablaConsultas;
    private javax.swing.JTextField textBusquedaVet;
    // End of variables declaration//GEN-END:variables
}
